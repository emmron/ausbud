{
  "version": 3,
  "sources": ["../../../app/routes/_layout.reviews.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_layout.reviews.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_layout.reviews.tsx\");\n  import.meta.hot.lastModified = \"1734268904286.5688\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nexport default function Reviews() {\n  _s();\n  const [reviews, setReviews] = useState([{\n    id: 1,\n    productId: 1,\n    rating: 4,\n    author: 'John D.',\n    content: 'Great product for pain management',\n    date: '2024-03-20',\n    condition: 'Chronic Pain',\n    verified: true\n  }]);\n  const [isAddingReview, setIsAddingReview] = useState(false);\n  const [error, setError] = useState(null);\n  const handleAddReview = review => {\n    try {\n      // Validation\n      if (!review.content?.trim()) {\n        throw new Error('Review content is required');\n      }\n      if (review.rating < 1 || review.rating > 5) {\n        throw new Error('Rating must be between 1 and 5');\n      }\n      const newReview = {\n        ...review,\n        id: reviews.length + 1,\n        date: new Date().toISOString().split('T')[0]\n      };\n      setReviews(prev => [...prev, newReview]);\n      setIsAddingReview(false);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to add review');\n    }\n  };\n  return <div className=\"container py-12 fade-in\">\n      <h2 className=\"text-3xl font-bold text-center mb-8\">Patient Reviews</h2>\n      {error && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>}\n      <div className=\"grid gap-6\">\n        {reviews.length === 0 ? <p className=\"text-center text-gray-600\">No reviews yet</p> : reviews.map(review => <div key={review.id} className=\"bg-white rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow\">\n              <div className=\"flex justify-between items-start mb-4\">\n                <div>\n                  <span className=\"font-medium text-gray-900\">{review.author}</span>\n                  {review.verified && <span className=\"ml-2 text-sm text-green-600\">(Verified Purchase)</span>}\n                  <div className=\"text-yellow-400 mt-1\">\n                    {'\u2605'.repeat(review.rating)}\n                    {'\u2606'.repeat(5 - review.rating)}\n                  </div>\n                </div>\n                <span className=\"text-sm text-gray-500\">{review.date}</span>\n              </div>\n              <p className=\"text-gray-700\">{review.content}</p>\n              {review.condition && <div className=\"mt-2 text-sm text-gray-600\">\n                  Condition: {review.condition}\n                </div>}\n            </div>)}\n      </div>\n      <button onClick={() => setIsAddingReview(true)} className=\"mt-8 px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary-light transition-colors\">\n        Write a Review\n      </button>\n    </div>;\n}\n_s(Reviews, \"gt8At3XxJIwLAD3+jWPtDl7emdU=\");\n_c = Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
