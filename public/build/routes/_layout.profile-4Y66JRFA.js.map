{
  "version": 3,
  "sources": ["../../../app/routes/_layout.profile.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_layout.profile.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_layout.profile.tsx\");\n  import.meta.hot.lastModified = \"1734264814218.8984\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nexport default function Profile() {\n  _s();\n  const [user] = useState({\n    name: 'John Doe',\n    email: 'john@example.com',\n    reviews: 5,\n    joinDate: '2024-01-01'\n  });\n  return <div className=\"profile\">\n      <h2>My Profile</h2>\n      <div className=\"profile-info\">\n        <div className=\"profile-section\">\n          <h3>Personal Information</h3>\n          <p>Name: {user.name}</p>\n          <p>Email: {user.email}</p>\n          <p>Member since: {user.joinDate}</p>\n          <p>Reviews written: {user.reviews}</p>\n        </div>\n        <div className=\"profile-section\">\n          <h3>My Reviews</h3>\n        </div>\n      </div>\n    </div>;\n}\n_s(Profile, \"5HxGkDriutdBtWmI+t0TiBBDnsk=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;AAsBA,mBAAyB;AAUnB;AA/BN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,UAA2B;AAChC,KAAG;AACH,QAAM,CAAC,IAAI,QAAI,uBAAS;AAAA,IACtB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,UAAU;AAAA,EACZ,CAAC;AACD,SAAO,mDAAC,SAAI,WAAU,WAClB;AAAA,uDAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,mDAAC,SAAI,WAAU,gBACb;AAAA,yDAAC,SAAI,WAAU,mBACb;AAAA,2DAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAA,QACxB,mDAAC,OAAE;AAAA;AAAA,UAAO,KAAK;AAAA,aAAf;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,QACpB,mDAAC,OAAE;AAAA;AAAA,UAAQ,KAAK;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE;AAAA;AAAA,UAAe,KAAK;AAAA,aAAvB;AAAA;AAAA;AAAA;AAAA,eAAgC;AAAA,QAChC,mDAAC,OAAE;AAAA;AAAA,UAAkB,KAAK;AAAA,aAA1B;AAAA;AAAA;AAAA;AAAA,eAAkC;AAAA,WALpC;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,SAAI,WAAU,mBACb,6DAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,aAAc,KADhB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OAbG;AAAA;AAAA;AAAA;AAAA,SAcL;AACJ;AACA,GAAG,SAAS,8BAA8B;AAC1C,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,SAAS;AAE1B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
